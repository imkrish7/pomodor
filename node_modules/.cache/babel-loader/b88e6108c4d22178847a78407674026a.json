{"ast":null,"code":"import _classCallCheck from \"I:\\\\pomo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"I:\\\\pomo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"I:\\\\pomo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"I:\\\\pomo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"I:\\\\pomo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"I:\\\\pomo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"I:\\\\pomo\\\\src\\\\clock.js\";\nimport React from 'react';\nvar circle;\n\nvar _fill;\n\nvar clock =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(clock, _React$Component);\n\n  function clock(props) {\n    var _this;\n\n    _classCallCheck(this, clock);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(clock).call(this, props));\n    _this.state = {\n      minutes: _this.props.Session\n    };\n    _this.draw = _this.draw.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.trigger = _this.trigger.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.stop = _this.stop.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.reset = _this.reset.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(clock, [{\n    key: \"draw\",\n    value: function draw() {\n      var canvas = this.refs.canvas;\n      var can = canvas.getContext('2d');\n      var poinTofill = 0;\n      var minutes = this.props.Session;\n      var second = 0;\n      var t = \"\".concat(minutes, \":\").concat(second);\n      can.lineWidth = 6;\n      can.fillStyle = \"#fff\";\n      can.strokeStyle = \"#edb4af\";\n      can.textAlign = \"center\";\n      can.font = \"25px Monospace\";\n      can.clearRect(0, 0, 300, 300);\n      can.fillText(t, 150, 150);\n      can.beginPath();\n      can.arc(150, 150, 125, poinTofill, Math.PI * 2, false);\n      can.stroke();\n    }\n  }, {\n    key: \"trigger\",\n    value: function trigger() {\n      var canvas = this.refs.canvas;\n      var can = canvas.getContext('2d');\n      var no = 0;\n      var poinTofill = -Math.PI / 2;\n      var diff;\n      var time = this.props.Session * 60;\n      var minutes = this.props.Session;\n      var second = 0;\n\n      _fill = function fill() {\n        diff = -Math.PI / 2 + no / time * Math.PI * 2;\n        can.clearRect(0, 0, 300, 300);\n\n        if (second === 0) {\n          minutes = minutes - 1;\n          second = 60;\n        }\n\n        var t = \"\".concat(minutes, \":\").concat(second);\n        can.textAlign = \"center\";\n        can.font = \"25px Monspace\";\n        can.strokeStyle = \"#edb4af\";\n        can.beginPath();\n        can.arc(150, 150, 125, poinTofill, Math.PI * 2, false);\n        can.stroke();\n        can.fillText(t, 150, 150);\n        can.lineWidth = 5;\n        can.strokeStyle = \"#fff\";\n        can.beginPath();\n        can.arc(150, 150, 125, poinTofill, diff, false);\n        can.stroke();\n        can.save();\n\n        if (no === time) {\n          clearInterval(_fill);\n          minutes = 0;\n          second = 0;\n        }\n\n        ++no;\n        --second;\n      };\n\n      circle = setInterval(_fill, 1000);\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      clearInterval(circle);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      clearInterval(circle);\n      this.draw();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"component Did mount\");\n      this.draw();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      this.draw();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"canvas\", {\n        ref: \"canvas\",\n        width: \"300\",\n        height: \"300\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"controler\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        ref: \"start\",\n        onClick: this.trigger,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Start\"), React.createElement(\"button\", {\n        id: \"stop\",\n        onClick: this.stop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Stop\"), React.createElement(\"button\", {\n        id: \"reset\",\n        onClick: this.reset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Reset\")));\n    }\n  }]);\n\n  return clock;\n}(React.Component);\n\nexport default clock;","map":{"version":3,"sources":["I:\\pomo\\src\\clock.js"],"names":["React","circle","fill","clock","props","state","minutes","Session","draw","bind","trigger","stop","reset","canvas","refs","can","getContext","poinTofill","second","t","lineWidth","fillStyle","strokeStyle","textAlign","font","clearRect","fillText","beginPath","arc","Math","PI","stroke","no","diff","time","save","clearInterval","setInterval","console","log","prevProps","prevState","snapshot","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nvar circle;\r\nvar fill;\r\nclass clock extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      minutes:this.props.Session\r\n    }\r\n   \r\n    this.draw=this.draw.bind(this);\r\n    this.trigger=this.trigger.bind(this);\r\n    this.stop=this.stop.bind(this);\r\n    this.reset=this.reset.bind(this);\r\n  }\r\n\r\n\r\ndraw(){\r\n      const canvas=this.refs.canvas;\r\n      const can=canvas.getContext('2d');\r\n      var poinTofill = 0;\r\n      var minutes=this.props.Session;\r\n      var second=0;\r\n      var t=`${minutes}:${second}`;\r\n      can.lineWidth = 6;\r\n      can.fillStyle = \"#fff\";\r\n      can.strokeStyle = \"#edb4af\";\r\n      can.textAlign = \"center\";\r\n      can.font = \"25px Monospace\";\r\n      can.clearRect(0, 0, 300, 300);\r\n      can.fillText(t, 150, 150);\r\n      can.beginPath();\r\n      can.arc(150, 150, 125, poinTofill, Math.PI*2, false)\r\n      can.stroke();\r\n}\r\n\r\ntrigger(){\r\n    const canvas=this.refs.canvas;\r\n    const can=canvas.getContext('2d');\r\n    var no = 0;\r\n    var poinTofill = -Math.PI/2;\r\n    var diff;\r\n    var time=this.props.Session*60;\r\n    var minutes=this.props.Session;\r\n    var second=0;\r\n\r\n  fill=()=>{\r\n   diff = -Math.PI/2+((no / time) * Math.PI * 2);\r\n   can.clearRect(0, 0, 300, 300);\r\n   if(second===0){\r\n         minutes=minutes-1;\r\n         second=60;\r\n       \r\n   }\r\n   var t=`${minutes}:${second}`;\r\n   can.textAlign = \"center\";\r\n   can.font = \"25px Monspace\";\r\n   can.strokeStyle=\"#edb4af\";\r\n   can.beginPath();\r\n   can.arc(150, 150, 125, poinTofill, Math.PI*2, false)\r\n   can.stroke();\r\n   can.fillText(t, 150, 150);\r\n   can.lineWidth = 5;\r\n   can.strokeStyle = \"#fff\";\r\n   can.beginPath();\r\n   can.arc(150, 150, 125, poinTofill, diff,false );\r\n   can.stroke();\r\n   can.save();\r\n   if (no===time) {\r\n       clearInterval(fill);\r\n       minutes=0;\r\n       second=0;\r\n   }\r\n   ++no;\r\n   --second;\r\n  \r\n }\r\ncircle=setInterval(fill,1000);\r\n }\r\n\r\n stop(){\r\n   clearInterval(circle);\r\n }\r\n reset(){\r\nclearInterval(circle);\r\n\r\nthis.draw();\r\n }\r\n  componentDidMount(){\r\n    console.log(\"component Did mount\");\r\n      this.draw();\r\n  }\r\n  componentDidUpdate(prevProps,prevState,snapshot){\r\n    this.draw();\r\n  }\r\n \r\n  render(){\r\n  return (\r\n    <div>\r\n    <canvas ref=\"canvas\" width=\"300\" height=\"300\"></canvas>\r\n    <div className=\"controler\">\r\n        <button ref=\"start\" onClick={ this.trigger}>Start</button>\r\n        <button id=\"stop\" onClick={ this.stop } >Stop</button>\r\n        <button id=\"reset\" onClick={ this.reset }>Reset</button>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n}\r\n\r\nexport default clock;\r\n"]},"metadata":{},"sourceType":"module"}